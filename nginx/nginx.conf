# 开启gzip
gzip on;

##
# HTTPS配置
##
#以下属性中，以ssl开头的属性表示与证书配置有关。
server {
  #配置HTTPS的默认访问端口为443。
  #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。
  #如果您使用Nginx 1.15.0及以上版本，请使用listen 443 ssl代替listen 443和ssl on。
  # 默认HTTP 1.1
  # listen 443 ssl;

  # 开启HTTP2
  listen 443 ssl http2;

  #填写证书绑定的域名
  server_name localhost;

  #填写证书文件名称
  ssl_certificate /etc/nginx/ssl/server.crt;
  #填写证书私钥文件名称
  ssl_certificate_key /etc/nginx/ssl/server.key;

  ssl_session_timeout 5m;
  #表示使用的加密套件的类型
  ssl_ciphers  HIGH:!aNULL:!MD5;
  ssl_prefer_server_ciphers  on;
  #表示使用的TLS协议的类型，您需要自行评估是否配置TLSv1.1协议。
  ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;

  ssl_prefer_server_ciphers on;

  location / {
    proxy_pass http://150.158.111.189:3000;
    proxy_read_timeout 60;
    proxy_connect_timeout 60;
    proxy_redirect off;

    # Allow the use of websockets
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  location /_next/static {
    add_header Cache-Control "public, max-age=3600, immutable";
    proxy_pass http://150.158.111.189:3000/_next/static;
  }
}

##
# HTTP配置
##

server {
  listen 80;
  #填写证书绑定的域名
  server_name localhost;
  #将所有HTTP请求通过rewrite指令重定向到HTTPS。
  rewrite ^(.*)$ https://$host$1;
}
